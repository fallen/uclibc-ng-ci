name: CI

on:
  push:
  workflow_dispatch:
    inputs:
      libc_sha1:
        description: 'uClibc-ng SHA1 to be tested'
      libc_test_sha1:
        description: 'uClibc-ng-test testsuite SHA1 to run'
      buildroot_sha1:
        description: 'Buildroot SHA1 to build'
      libc_git:
        description: 'uClibc-ng git repo to use'

jobs:
  build_and_valid:
    name: Build and valid
    strategy:
      matrix:
        arch: [aarch64, armv7, amd64, kvx, mips32r6, or1k, powerpc, powerpc64, sparc64]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install qemu
        run: sudo apt-get -y update; sudo apt-get install -y qemu-system-common qemu-system-mips qemu-utils qemu-system-arm qemu-block-extra qemu-system-mips qemu-system-misc qemu-system-ppc qemu-system-s390x qemu-system-sparc qemu-system-x86
      - name: Install python3 junit_xml module
        run: sudo apt-get -y update; sudo apt-get install -y python3-junit.xml
      - name: Build
        run: ./build.sh -a ${{ matrix.arch }} -l "${{ inputs.libc_sha1 }}" -t "${{ inputs.libc_test_sha1 }}" -b "${{ inputs.buildroot_sha1 }}" -g "${{ inputs.libc_git }}"
      - name: Valid
        run: ./run.sh ${{ matrix.arch }}
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ matrix.arch }} Test Results (${{ github.event.workflow_run.event || github.event_name }})
          path: build_${{ matrix.arch }}/junit_report.xml

  publish_test_results:
    name: Publish Test Results
    needs: build_and_valid
    runs-on: ubuntu-latest
    permissions:
      checks: write
      # only needed unless run with comment_mode: off
      pull-requests: write
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.7.0
        with:
          files: "artifacts/**/*.xml"
